{
    "swagger": "2.0",
    "info": {
        "title": "AzureExtensions",
        "description": "API that tests known AutoRest Azure extensions",
        "version": "2017-03-30"
    },
    "host": "localhost:3000",
    "schemes": [
        "http"
    ],
    "basePath": "/",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/cupcakes": {
            "get": {
                "summary": "Get all cupcakes",
                "operationId": "Cupcake_List",
                "description": "List all cupcakes.",
                "parameters": [],
                "tags": [
                    "Cupcakes"
                ],
                "responses": {
                    "200": {
                        "description": "All cupcake entities.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create cupcake",
                "operationId": "Cupcake_Create",
                "description": "Create a cupcake.",
                "parameters": [
                    {
                        "name": "cupcake",
                        "in": "body",
                        "description": "x-ms-client-flatten on parameter test",
                        "x-ms-client-flatten": true,
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cupcake"
                        }
                    }
                ],
                "tags": [
                    "Cupcakes"
                ],
                "responses": {
                    "201": {
                        "description": "Created cupcake",
                        "schema": {
                            "$ref": "#/definitions/Cupcake"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cupcakeBatches": {
            "get": {
                "summary": "Get all cupcake batches",
                "operationId": "CupcakeBatch_List",
                "description": "List all cupcake batches.",
                "parameters": [],
                "tags": [
                    "CupcakeBatch"
                ],
                "responses": {
                    "200": {
                        "description": "All cupcake batch entities.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CupcakeBatch"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create cupcake batch",
                "operationId": "CupcakeBatch_Create",
                "description": "Create a cupcake batch.",
                "parameters": [
                    {
                        "name": "CupcakeBatch",
                        "in": "body",
                        "description": "x-ms-client-flatten on parameter test",
                        "x-ms-client-flatten": true,
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CupcakeBatch"
                        }
                    }
                ],
                "tags": [
                    "CupcakeBatch"
                ],
                "responses": {
                    "201": {
                        "description": "Created cupcake batch",
                        "schema": {
                            "$ref": "#/definitions/CupcakeBatch"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groupTests/{pathParameter}": {
            "get": {
                "summary": "Test path parameter group",
                "operationId": "GroupTests_PathParameter",
                "description": "Test path parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "path",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {
                            "name": "my-test.GrouP"
                        }
                    },
                    {
                        "name": "parm2",
                        "in": "query",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {
                    "200": {
                        "description": "Results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groupTests/localAndGlobal": {
            "get": {
                "summary": "Test local/global parameter group",
                "operationId": "GroupTest_MixedParameter",
                "description": "Test local/global parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "path",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {
                            "name": "my-test.GrouP2"
                        }
                    },
                    {
                        "$ref": "#/parameters/GlobalParameter"
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {
                    "200": {
                        "description": "Results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/virtualMachines": {
            "put": {
                "summary": "Create or update VM",
                "operationId": "VirtualMachine_CreateOrUpdate",
                "description": "Create or update VM.",
                "parameters": [
                    {
                        "name": "virtualMachine",
                        "in": "body",
                        "description": "long running operation test",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VirtualMachine"
                        }
                    }
                ],
                "tags": [
                    "VirtualMachines"
                ],
                "responses": {
                    "201": {
                        "description": "Created VM",
                        "schema": {
                            "$ref": "#/definitions/VirtualMachine"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/groupTests/postfixTest": {
            "get": {
                "summary": "Test postfix parameter group",
                "operationId": "GroupTests_PostfixTest",
                "description": "Test postfix parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "query",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {
                            "postfix": "Contoso"
                        }
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {
                    "200": {
                        "description": "Results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groupTests/noPostfixTest": {
            "get": {
                "summary": "Test postfix parameter group",
                "operationId": "GroupTests_NoPostfixTest",
                "description": "Test postfix parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "query",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {}
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {
                    "200": {
                        "description": "Results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groupTests/noHyphen": {
            "get": {
                "summary": "Test postfix parameter group",
                "operationId": "GroupTestsNoHyphen",
                "description": "Test postfix parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "query",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {}
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {
                    "200": {
                        "description": "Results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groupTests/flattened": {
            "post": {
                "summary": "Test flattened parameter group",
                "operationId": "GroupTests_FlattenedParms",
                "description": "Test flattened parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "body",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CupcakeBatch"
                        },
                        "x-ms-client-flatten": true,
                        "x-ms-parameter-grouping": {
                            "name": "flattened-group"
                        }
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {}
            }
        },
        "/groupTests/multipleGroups": {
            "get": {
                "summary": "Test multiple parameter group",
                "operationId": "GroupTests_MultipleGroups",
                "description": "Test multiple parameter group",
                "parameters": [
                    {
                        "name": "parm",
                        "in": "query",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {
                            "name": "group-a"
                        }
                    },
                    {
                        "name": "parm2",
                        "in": "query",
                        "description": "x-ms-parameter-grouping test",
                        "required": true,
                        "type": "string",
                        "x-ms-parameter-grouping": {
                            "name": "group-b"
                        }
                    }
                ],
                "tags": [
                    "Cupcake"
                ],
                "responses": {
                    "200": {
                        "description": "Results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "x-ms-paths": {
        "/cupcakes?id={id}": {
            "get": {
                "summary": "Get a cupcake",
                "operationId": "Cupcake_GetById",
                "description": "Get a cupcake.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "x-ms-paths test",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Cupcakes"
                ],
                "responses": {
                    "200": {
                        "description": "All cupcake entities.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cupcakes?flavor={flavor}": {
            "get": {
                "summary": "Get a cupcake",
                "operationId": "Cupcake_GetByFlavor",
                "description": "Get a cupcake.",
                "parameters": [
                    {
                        "name": "flavor",
                        "in": "query",
                        "description": "x-ms-paths test",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Cupcakes"
                ],
                "responses": {
                    "200": {
                        "description": "All cupcake entities.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cupcake"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Search/checkNameAvailability": {
            "post": {
                "tags": [
                    "Services"
                ],
                "description": "Checks whether or not the given Search service name is available for use. Search service names must be globally unique since they are part of the service URI (https://<name>.search.windows.net).",
                "externalDocs": {
                    "url": "https://aka.ms/search-manage"
                },
                "operationId": "Services_CheckNameAvailability",
                "parameters": [
                    {
                        "name": "checkNameAvailabilityInput",
                        "in": "body",
                        "description": "The resource name and type to check.",
                        "x-ms-client-flatten": true,
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckNameAvailabilityInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The name check completed. The response contains details of whether the name is valid and available. If the name is invalid, the response also contains a message explaining why not.",
                        "schema": {
                            "$ref": "#/definitions/CheckNameAvailabilityOutput"
                        },
                        "examples": {
                            "application/json": {
                                "nameAvailable": false,
                                "reason": "AlreadyExists",
                                "message": ""
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CupcakeBatch": {
            "type": "object",
            "properties": {
                "properties": {
                    "x-ms-client-flatten": true,
                    "$ref": "#/definitions/Cupcake"
                }
            }
        },
        "Cupcake": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor"
                }
            }
        },
        "VirtualMachine": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "sku": {
                    "x-ms-client-name": "ClientNameForSku",
                    "type": "string",
                    "description": "SKU"
                }
            }
        },
        "CheckNameAvailabilityInput": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "description": "The Search service name to validate. Search service names must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60 characters in length.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the resource whose name is to be validated. This value must always be 'searchServices'.",
                    "type": "string",
                    "enum": [
                        "searchServices"
                    ],
                    "x-ms-enum": {
                        "name": "ResourceType",
                        "modelAsString": false
                    }
                }
            },
            "description": "Input of check name availability API.",
            "example": {
                "name": "your-service-name-here",
                "type": "searchServices"
            }
        },
        "CheckNameAvailabilityOutput": {
            "type": "object",
            "properties": {
                "nameAvailable": {
                    "x-ms-client-name": "IsNameAvailable",
                    "description": "A value indicating whether the name is available.",
                    "type": "boolean",
                    "readOnly": true
                },
                "reason": {
                    "description": "The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore unavailable.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "Invalid",
                        "AlreadyExists"
                    ],
                    "x-ms-enum": {
                        "name": "UnavailableNameReason",
                        "modelAsString": true
                    }
                },
                "message": {
                    "description": "A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid' is returned in the 'reason' property.",
                    "type": "string",
                    "readOnly": true
                }
            },
            "description": "Output of check name availability API."
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Error code"
                },
                "message": {
                    "type": "string",
                    "description": "Message"
                }
            }
        }
    },
    "parameters": {
        "SubscriptionIdParameter": {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A unique identifier of a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
        },
        "ApiVersionParameter": {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to be used with the HTTP request."
        },
        "GlobalParameter": {
            "name": "method-parameter",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-parameter-grouping": {
                "name": "my-test.GrouP2"
            },
            "x-ms-parameter-location": "method"
        }
    }
}